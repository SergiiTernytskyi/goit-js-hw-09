{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAkB,CACtBC,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,SAAU,OACVC,QAAS,KAGPC,EAAa,EACbC,EAAa,EACbC,EAAe,EA8BnB,SAASC,EAAcP,EAAUQ,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFM,YAAW,WACTF,EAAQ,CAAEb,WAAUQ,S,GACnBA,GAEHO,YAAW,WACTD,EAAO,CAAEd,WAAUQ,S,GAClBA,E,IAKT,SAASQ,EAAUC,G,IAAEjB,EAAFiB,EAAEjB,SAAUQ,EAAZS,EAAYT,MAC7BU,QAAQC,IAAI,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,OAC1DZ,EAAAyB,OAAOC,QACL,qBAAoCF,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,MAC1CV,E,CAIJ,SAASyB,EAAQN,G,IAAEjB,EAAFiB,EAAEjB,SAAUQ,EAAZS,EAAYT,MAC3BU,QAAQC,IAAI,sBAAqCC,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,OACvDZ,EAAAyB,OAAOG,QAAQ,oBAAmCJ,OAAfpB,EAAS,QAAYoB,OAANZ,EAAM,MAAKV,E,CAtD/C2B,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYxB,EAAKsB,EAALtB,MAAOyB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG3B9B,EAAa+B,OAAOC,SAAS5B,EAAM6B,OACnChC,EAAa8B,OAAOC,SAASH,EAAKI,OAClC/B,EAAe6B,OAAOC,SAASF,EAAOG,OAEtC,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAcgC,GAAK,EAAG,CAIxC/B,EAFwB+B,EAAI,EADJlC,EAAakC,EAAIjC,GAItCkC,KAAKvB,GACLwB,MAAMjB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nconst notiflixOptions = {\n  width: \"360px\",\n  position: \"right-top\",\n  clickToClose: true,\n  fontSize: \"16px\",\n  timeout: 5000,\n};\n\nlet firstDelay = 0;\nlet stepNumber = 0;\nlet amountNumber = 0;\n\nconst formRef = document.querySelector(\".form\");\nformRef.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  firstDelay = Number.parseInt(delay.value);\n  stepNumber = Number.parseInt(step.value);\n  amountNumber = Number.parseInt(amount.value);\n\n  for (let i = 0; i < amountNumber; i += 1) {\n    const calculatedDelay = firstDelay + i * stepNumber;\n    const promisePosition = i + 1;\n\n    createPromise(promisePosition, calculatedDelay)\n      .then(onSucsess)\n      .catch(onError);\n  }\n\n  // event.currentTarget.reset();\n  // delay.value = 0;\n  // step.value = 0;\n  // amount.value = 0;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\nfunction onSucsess({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notify.success(\n    `Fulfilled promise ${position} in ${delay}ms`,\n    notiflixOptions\n  );\n}\n\nfunction onError({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`, notiflixOptions);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$notiflixOptions","width","position","clickToClose","fontSize","timeout","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepNumber","$ce04d3a99e08e73b$var$amountNumber","$ce04d3a99e08e73b$var$createPromise","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSucsess","param","console","log","concat","Notify","success","$ce04d3a99e08e73b$var$onError","failure","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","Number","parseInt","value","i","then","catch"],"version":3,"file":"03-promises.d4a336b3.js.map"}