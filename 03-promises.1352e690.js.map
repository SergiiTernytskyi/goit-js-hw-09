{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvC,IAAIC,EAAa,KACbC,EAAa,KACbC,EAAe,KAEnBL,EAAQM,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEVV,EAAaO,EAAMI,MACnBV,EAAaO,EAAKG,MAClBT,EAAeO,EAAOE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst formRef = document.querySelector(\".form\");\n\nlet firstDelay = null;\nlet stepNumber = null;\nlet amountNumber = null;\n\nformRef.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  firstDelay = delay.value;\n  stepNumber = step.value;\n  amountNumber = amount.value;\n\n  // createPromise(amountNumber, firstDelay)\n  //   .then(({ position, delay }) => {\n  //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //   });\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const calculatedDelay =\n    Number.parseInt(firstDelay) + Number.parseInt(stepNumber);\n\n  console.log(calculatedDelay);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      }\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$stepNumber","$47d4ff9957288465$var$amountNumber","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","value"],"version":3,"file":"03-promises.1352e690.js.map"}